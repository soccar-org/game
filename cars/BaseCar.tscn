[gd_scene load_steps=3 format=3 uid="uid://75ac6j1h2dh8"]

[sub_resource type="GDScript" id="GDScript_k7sl4"]
script/source = "extends VehicleBody3D

const MAX_STEER_ANGLE = 45
const ENGINE_POWER = 100

const BOOST_SPEED = 800.0
const JUMP_VELOCITY = 20.0
var is_boosting = false

var front_left_wheel
var front_right_wheel
var rear_left_wheel
var rear_right_wheel
var ground_ray

func _ready():
	# $FrontWheelRight
	front_left_wheel = $FrontLeftWheel
	front_right_wheel = $FrontRightWheel
	rear_left_wheel = $RearLeftWheel
	rear_right_wheel = $RearRightWheel 
	

	ground_ray = $RayCast3D
	ground_ray.enabled = true

func _physics_process(delta):
	handle_steering(delta)
	handle_movement(delta)
	
	check_for_boost()
	handle_jump()
	
	# if Input.is_action_just_pressed(\"jump\"): print(\"Jump button pressed\")
	if ground_ray.is_colliding(): print(\"Grounded\")
	else: print(\"Not Grounded\")


func handle_steering(delta):
	var steer_input = Input.get_axis(\"left\", \"right\")
	front_left_wheel.steering = -steer_input * MAX_STEER_ANGLE
	front_right_wheel.steering = -steer_input * MAX_STEER_ANGLE

func handle_movement(delta):
	var gas_input = Input.get_action_strength(\"gas\")
	var brake_input = Input.get_action_strength(\"reverse\")

	var engine_force = 0.0

	if gas_input > 0:
		# Positive engine force for forward movement
		engine_force = gas_input * ENGINE_POWER
	elif brake_input > 0:
		# Negative engine force for braking or reversing
		engine_force = -brake_input * ENGINE_POWER
		
	# Apply the engine force to the front wheels
	front_left_wheel.engine_force = engine_force
	front_right_wheel.engine_force = engine_force
	rear_left_wheel.engine_force = engine_force
	rear_right_wheel.engine_force = engine_force

func check_for_boost():
	is_boosting = Input.is_action_pressed(\"boost\")

func handle_jump():
	ground_ray.force_raycast_update()
	
	if Input.is_action_just_pressed(\"jump\") and ground_ray.is_colliding():
		apply_impulse(Vector3(0, JUMP_VELOCITY, 0), Vector3.ZERO)
"

[sub_resource type="BoxShape3D" id="BoxShape3D_mm2gk"]
size = Vector3(2.08254, 1.60117, 5.39934)

[node name="car" type="VehicleBody3D"]
mass = 1.1
center_of_mass_mode = 1
center_of_mass = Vector3(0, -0.1, 0)
script = SubResource("GDScript_k7sl4")

[node name="wheal0" type="VehicleWheel3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.03343, 0.340338, -1.57977)
use_as_traction = true
use_as_steering = true
wheel_roll_influence = 0.5
wheel_radius = 0.431
wheel_rest_length = 0.3
wheel_friction_slip = 3.0
suspension_stiffness = 30.0
suspension_max_force = 10000.0

[node name="wheal1" type="VehicleWheel3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.02622, 0.340338, -1.57977)
use_as_traction = true
use_as_steering = true
wheel_roll_influence = 0.5
wheel_radius = 0.431
wheel_rest_length = 0.3
wheel_friction_slip = 3.0
suspension_stiffness = 30.0
suspension_max_force = 10000.0

[node name="wheal2" type="VehicleWheel3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.03343, 0.340338, 1.51869)
use_as_traction = true
wheel_roll_influence = 0.5
wheel_radius = 0.431
wheel_rest_length = 0.3
wheel_friction_slip = 3.0
suspension_stiffness = 30.0
suspension_max_force = 10000.0

[node name="wheal3" type="VehicleWheel3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.02622, 0.340338, 1.51869)
use_as_traction = true
wheel_roll_influence = 0.5
wheel_radius = 0.431
wheel_rest_length = 0.3
wheel_friction_slip = 3.0
suspension_stiffness = 30.0
suspension_max_force = 10000.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.689432, -0.062412)
shape = SubResource("BoxShape3D_mm2gk")
